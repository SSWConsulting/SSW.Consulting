on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      resourceGroupName:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Admin - ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.bicep.outputs.storageAccountUrl }}

    steps:
      - uses: actions/download-artifact@v4

      - name: Set appsettings.json
        if: ${{ inputs.environment == 'staging' }}
        run: |
          cd ui
          cp appsettings.json appsettings.json.bak
          cp appsettings.${{ inputs.environment }}.json appsettings.json

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Deploy Bicep
        id: bicep
        shell: pwsh
        run: |
          $out = az deployment group create `
            --resource-group ${{ inputs.resourceGroupName }} `
            --template-file .\infra\admin-main.bicep `
            --parameters environment=${{ inputs.environment }} `
            | convertfrom-json | foreach properties | foreach outputs

          $out.PSObject.Properties | ForEach-Object {
              $name = $_.Name
              $value = $_.Value.value
              Write-Output "::set-output name=$($name)::$($value)"
          }

      - name: Enable Static Website on Azure Storage
        id: enable-static-site
        shell: pwsh
        run: |
          az storage blob service-properties update `
            --account-name ${{ steps.bicep.outputs.storageAccountName }} `
            --static-website `
            --404-document index.html `
            --index-document index.html

      - name: Get SAS key
        id: storage
        shell: pwsh
        run: |
          $expiry = (Get-Date -AsUTC).AddMinutes(10).ToString('yyyy-MM-ddTHH:mm:ssZ')
          $token = az storage container generate-sas `
            --account-name ${{ steps.bicep.outputs.storageAccountName }} `
            --name '$web' `
            --permissions acdrw `
            --expiry $expiry --https-only --permissions dlrw -o tsv
          Write-Output "::set-output name=sastoken::$($token)"

      - name: Upload UI
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: "ui"
          container_name: "$web"
          account_name: ${{ steps.bicep.outputs.storageAccountName }}
          sas_token: ${{ steps.storage.outputs.sastoken }}
          sync: "true"

      - name: Purge Front Door cache
        id: purge-front-door
        shell: pwsh
        run: |
          az afd endpoint purge \
          --resource-group ${{ inputs.resourceGroupName }} `
          --profile-name ${{ inputs.frontDoorProfileName }} `
          --endpoint-name ${{ inputs.frontDoorEndpointName }} `
          --domains ${{ inputs.frontDoorDomain }} `
          --content-paths '/*' `
          --no-wait