on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      resourceGroupName:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

jobs:
  deploy:
    name: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.bicep.outputs.storageAccountUrl }}

    
    steps:
    - uses: actions/download-artifact@v3

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Bicep
      id: bicep
      uses: azure/CLI@v1
      with:
        inlineScript: |
          $out = az deployment group create `
            --resource-group ${{ inputs.resourceGroupName }} `
            --template-file .\infra\main.bicep `
            --parameters `
              environment=${{ inputs.environment }} `
            | convertfrom-json `
            | foreach properties `
            | foreach outputs
          
          $out | Get-Member -MemberType NoteProperty | ForEach-Object {
            echo "::set-output name=$_.name::$out.$name.value"
          }

    - name: Enable Static Website on Azure Storage
      uses: azure/CLI@v1
      with:        
        inlineScript: |
          az storage blob service-properties update `
            --account-name stsswrewardsadminmattzvd `
            --static-website `
            --404-document index.html `
            --index-document index.html

    - name: Get SAS key
      uses: azure/CLI@v1
      id: storage
      with:        
        inlineScript: |
          $expiry = (Get-Date -AsUTC).AddMinutes(10).ToString('yyyy-MM-ddTHH:mm:ssZ')
          $token = az storage container generate-sas `
            --account-name stsswrewardsadminmattzvd `
            --name '$web' `
            --permissions acdrw `
            --expiry $expiry --https-only --permissions dlrw -o tsv
          echo "::set-output name=sastoken::$token"

    - name: Upload UI
      uses: bacongobbler/azure-blob-storage-upload@main
      with:
        source_dir: 'ui'
        container_name: '$web'
        sas_token: ${{ steps.storage.outputs.sastoken }}
        sync: 'true'