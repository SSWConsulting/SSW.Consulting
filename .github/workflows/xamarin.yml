name: Build and Deploy Xamarin

on:
  push:
    branches:
      - master
    paths:
      - 'Xamarin/**'
  pull_request:
    branches:
      - master
    # paths:
    #   - 'Xamarin/**'

jobs:
  Android:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: nuget restore Xamarin/SSW.Rewards.sln

    - name: Install Android Key file
      env:
        ANDROID_SIGNING_KEY_BASE64: ${{ secrets.ANDROID_SIGNING_KEY_BASE64 }}
      run: |
        # keystore=$RUNNER_TEMP/key.keystore
        # keystore=$(echo -n "$ANDROID_SIGNING_KEY_BASE64" | base64 --decode)
        # echo -n "$ANDROID_SIGNING_KEY_BASE64" | base64 --decode --output $keystore
        # & $keystore = $Env:RUNNER_TEMP/key.keystore
        [System.Convert]::FromBase64String($Env:ANDROID_SIGNING_KEY_BASE64) | $Env:RUNNER_TEMP/key.keystore

    - name: Extract version from tag
      if: startsWith(github.ref, 'refs/tags/v')
      uses: damienaicheh/extract-version-from-tag-action@v1.0.0

    - name: Update AndroidManifest.xml
      if: startsWith(github.ref, 'refs/tags/v')
      uses: damienaicheh/update-android-version-manifest-action@v1.0.0
      with:
        android-manifest-path: 'Xamarin/SSW.Rewards/SSW.Rewards.Android/Properties/AndroidManifest.xml'
        version-code: ${{ env.NUMBER_OF_COMMITS }}
        version-name: '${{ env.MAJOR }}.${{ env.MINOR }}'
        print-file: true

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Build
      env:
        ANDROID_KEYSTORE_PWD: ${{ secrets.ANDROID_KEYSTORE_PWD }}
        ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
      run: |
        cd Xamarin/SSW.Rewards/SSW.Rewards.Android
        msbuild SSW.Rewards.Android.csproj /p:Configuration=Release /t:SignAndroidPackage /p:AndroidKeyStore="true" /p:AndroidSigningKeyStore="$RUNNER_TEMP/key.keystore" /p:AndroidSigningKeyPass="$ANDROID_KEYSTORE_PWD" /p:AndroidSigningKeyAlias="\"$ANDROID_KEYSTORE_ALIAS\"" /p:AndroidSigningStorePass="$ANDROID_KEYSTORE_PWD"

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Android
        path: Xamarin/SSW.Rewards/SSW.Rewards.Android/bin/Release/com.ssw.consulting-Signed.aab


  iOS:
    runs-on: macos-latest
    if: false
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: nuget restore Xamarin/SSW.Rewards.sln

    - name: Install the Apple certificate and provisioning profile
      env:
        BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
        P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        # create variables
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

        # import certificate and provisioning profile from secrets
        echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

        # create temporary keychain
        security create-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p $KEYCHAIN_PASSWORD $KEYCHAIN_PATH

        # import certificate to keychain
        security import $CERTIFICATE_PATH -P $P12_PASSWORD -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH

        # apply provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Extract version from tag
      if: startsWith(github.ref, 'refs/tags/v')
      uses: damienaicheh/extract-version-from-tag-action@v1.0.0

    - name: Update Info.plist
      if: startsWith(github.ref, 'refs/tags/v')
      uses: damienaicheh/update-ios-version-info-plist-action@v1.0.0
      with:
        info-plist-path: 'Xamarin/SSW.Rewards/SSW.Rewards.iOS/Info.plist'
        bundle-short-version-string: '${{ env.MAJOR }}.${{ env.MINOR }}'
        bundle-version: '1.${{ env.NUMBER_OF_COMMITS }}'
        print-file: true

    - name: Build
      run: |
        cd Xamarin/SSW.Rewards
        msbuild SSW.Rewards.iOS/SSW.Rewards.iOS.csproj /p:Platform=iPhone /p:Configuration=Release /p:BuildIpa=true "/p:Codesignkey=iPhone Distribution" "/p:CodesignProvision=Automatic:AppStore"


    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: iOS
        path: Xamarin/SSW.Rewards/SSW.Rewards.iOS/**/SSW.Consulting.iOS.ipa

  DeployAndroid:
    needs: [Android]
    #if: ${{ github.ref == 'refs/heads/master' && startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest


    steps:
      - name: Download Android app
        uses: actions/download-artifact@v2
        with:
          name: Android

      - name: Install appcenter
        run: npm install -g appcenter-cli

      - name: upload Android
        run: |
          appcenter distribute stores publish \
            -s Beta \
            -f com.ssw.consulting-Signed.aab \
            -a SSW.MobileApps/SSW.Xamarin.Android \
            --token ${{secrets.APP_CENTER_KEY}}

  DeployiOS:
    needs: [iOS]
    if: false
    #if: ${{ github.ref == 'refs/heads/master' && startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ubuntu-latest


    steps:
      - name: Download iOS app
        uses: actions/download-artifact@v2
        with:
          name: iOS

      - name: Install appcenter
        run: npm install -g appcenter-cli

      - name: upload iOS
        run: |
          appcenter distribute stores publish \
            --store "App Store Connect Users" \
            -f bin/iPhone/Release/SSW.Consulting.iOS.ipa \
            -a SSW.MobileApps/SSW.Xamarin.iOS \
            --release-notes release.txt \
            --token ${{secrets.APP_CENTER_KEY}}
