@page "/delete"

@using Microsoft.AspNetCore.Authorization
@using SSW.Rewards.Admin.UI.Components
@using SSW.Rewards.Admin.UI.Components.Dialogs.Users
@using SSW.Rewards.ApiClient.Services
@using SSW.Rewards.Shared.DTOs.Users

@inject IUserAdminService userAdminService
@inject IDialogService DialogService
@inject ISnackbar SnackBar

@attribute [Authorize(Roles = "Staff, Admin")]

<MudText Typo="Typo.h2">Deletion Requests</MudText>
<MudText Typo="Typo.body1">Users who have requested that their profile be deleted</MudText>


<Table TItem="ProfileDeletionRequestDto"
       Items="@(_model)"
       IsLoading="@_loading"
       OnRowClick="OnRowClicked">
    <HeadingTemplate>
        <MudTh>
            Id
        </MudTh>
        <MudTh>
            Name
        </MudTh>
        <MudTh>
            When requested
        </MudTh>
    </HeadingTemplate>
    <RowTemplate>
        <MudTd>
            @context.UserId
        </MudTd>
        <MudTd DataLabel="Name">
            @context.UserName
        </MudTd>
        <MudTd DataLabel="Requested">
            @context.Requested
        </MudTd>
    </RowTemplate>
</Table>

@code {
    private List<ProfileDeletionRequestDto> _model = new();
    private bool _loading = true;
    readonly DialogOptions _disableBackdropClick = new() { DisableBackdropClick = true,  MaxWidth = MaxWidth.Medium, FullWidth = true };

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        _loading = true;
        _model.Clear();
        var vm = await userAdminService.GetProfileDeletionRequests();
        _model = vm.Requests;
        _loading = false;
    }

    private async Task OnRowClicked(TableRowClickEventArgs<ProfileDeletionRequestDto> args)
    {
        var dialogParams = new DialogParameters { ["Dto"] = args.Item };

        var dialog = DialogService.Show<DeleteUserDialog>("Delete a user", dialogParams);
        var result = await dialog.Result;
        if (!result.Canceled)
        {
            if (result.Data is AdminDeleteProfileDto dto)
            {
                await userAdminService.DeleteUserProfile(dto);
                SnackBar.Add("User profile deleted", Severity.Success);
                await LoadUsers();
            }
        }
    }
}