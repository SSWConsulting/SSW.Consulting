@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using SSW.Rewards.ApiClient.Services
@using SSW.Rewards.Shared.DTOs.Roles
@using SSW.Rewards.Shared.DTOs.Users

@inject IRoleService RoleService

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Edit User Roles</MudText>    
    </TitleContent>
    <DialogContent>
        @if (_loading)
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        }
        else
        {
            <MudSelect T="string" @bind-SelectedValues="SelectedRoles" Label="Roles" MultiSelection="true">
                @foreach (var item in _roles)
                {
                    <MudSelectItem T="string" Value="@item.Name">@item.Name</MudSelectItem>
                }
            </MudSelect>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton 
            Variant="Variant.Filled"
            Color="Color.Primary"
            OnClick="Submit">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private bool _loading = true;
    private IEnumerable<string> SelectedRoles { get; set; } = Enumerable.Empty<string>();
    IEnumerable<RoleDto> _roles = Enumerable.Empty<RoleDto>();
    
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    
    [Parameter]
    public UserDto User { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            await FetchRoles();
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    
    private async Task FetchRoles()
    {
        _loading = true;
        _roles = await RoleService.GetRoles();
        SelectedRoles = User.Roles.Select(r => r.Name);
        _loading = false;
    }

    private void Submit()
    {
        User.Roles = _roles.Where(r => SelectedRoles.Contains(r.Name)).ToList();
        MudDialog.Close(DialogResult.Ok(User));
    }
    
    private void Cancel() => MudDialog?.Cancel();
}