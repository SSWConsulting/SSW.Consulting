@page "/profiles"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Authorization

@attribute [Authorize]

@inject IStaffClient Client
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h2">Profiles</MudText>
<MudText Typo="Typo.body1">All staff profiles available for editing</MudText>

<MudTable
    Items="@_profiles.Staff"
    Striped="true"
    Loading="@_loading"
    OnRowClick="(TableRowClickEventArgs<StaffDto> args) => GotoProfile(args.Item.Id)">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>
            <MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<StaffDto, object>(x => x.Name)">Name</MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Pic">
            <img src="@context.ProfilePhoto"
                 style="max-height: 50px"
                 loading="lazy">
        </MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
    </RowTemplate>
</MudTable>

<MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="_ => GotoProfile(null)" />

@code {
    private bool _loading = true;
    private StaffListViewModel _profiles = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        try
        {
            await Task.Delay(500);
            _profiles = await Client.GetAsync();
            _loading = false;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private void GotoProfile(int? id)
    {
        NavigationManager.NavigateTo($"/profile/{id}");
    }
}