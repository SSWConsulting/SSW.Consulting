@typeparam TItem

@using SSW.Rewards.Admin.Models.Interfaces
@using System.Diagnostics.CodeAnalysis

<MudTable
    Items="@Items"
    Loading="@IsLoading"
    OnRowClick="OnRowClick">
    <ToolBarContent>
        <MudText Typo="Typo.h6">@TableTitle</MudText>
        @if (ToolbarContent is not null)
        {
            <MudSpacer/>
            @ToolbarContent
        }
    </ToolBarContent>
    <HeaderContent>
        @if (HeadingTemplate is not null)
        {
            @HeadingTemplate
        }
    </HeaderContent>
    <RowTemplate>
        @if (RowTemplate is not null)
        {
            @RowTemplate(context)
        }
    </RowTemplate>
    <NoRecordsContent>
        <div class="d-flex flex-grow-1 justify-center">
            <MudText Typo="Typo.subtitle1">No Results</MudText>
        </div>
    </NoRecordsContent>
    <PagerContent>
        <MudTablePager/>
    </PagerContent>
</MudTable>


@code {
    [Parameter]
    public bool IsLoading { get; set; } = true;

    [Parameter]
    public string? TableTitle { get; set; }
    
    [Parameter]
    public RenderFragment? ToolbarContent { get; set; }
    
    [Parameter]
    public RenderFragment? HeadingTemplate { get; set; }
    
    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }
    
    [Parameter]
    public EventCallback<TableRowClickEventArgs<TItem>> OnRowClick { get; set; }

    [Parameter, AllowNull]
    public IEnumerable<TItem> Items { get; set; }
}