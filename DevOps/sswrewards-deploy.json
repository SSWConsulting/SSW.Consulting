{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "servicePrincipleObjectId": {
      "type": "string",
      "metadata": {
        "description": "Run 'az login' and then run 'az ad sp list --display-name <YOUR SERVICE PRINCIPLE APP NAME> --query \"[].objectId\"' to obtain the ObjectID of the ServicePrincipal used to deploy your resources. You can also browse the Azure Portal to the App Registration to obtain the Service Principal Object ID."
      }
    },
    "project": {
      "type": "string", "defaultValue":"fredorhwatever"
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "staging",
        "prod",
        "demo",
        "uat",
        "qa"
      ]
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "Default1",
      "metadata": {
        "description": "Name of the App Service Plan to host the App Service (Web App)."
      }
    },
    "serverFarmResourceGroup": {
      "type": "string",
      "defaultValue": "SSW.AppServicePlans",
      "metadata": {
        "description": "Resource Group name that contains the App Service Plan resource."
      }
    },
    "serverFarmLocation": {
      "type": "string",
      "defaultValue": "australiaeast"
    },
    "hostingEnvironment": {
      "type": "string",
      "defaultValue": ""
    },
    "sqlServerLocation": {
      "type": "string",
      "defaultValue": "australiaeast"
    },
    "sqlDatabaseTier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "sqlDatabaseSkuName": {
      "type": "string",
      "defaultValue": "S0"
    },
    "sqlDatabaseCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "secretCacheTimeoutMinutes": {
      "type": "int",
      "defaultValue": 60
    },
    "now": {
      "type": "string",
      "defaultValue": "[utcNow('yyyy/MM/dd')]"
    }
  },
  "variables": {
    "project": "[replace(replace(tolower(parameters('project')),'.',''), '-','')]",
    "environment": "[tolower(parameters('environment'))]",
    "modifiedDate": "[tolower(parameters('now'))]",
    "entropy": "[take(uniqueString(resourceGroup().id), 5)]",
    "random": "[take(uniqueString(variables('modifiedDate')), 5)]",
    "contentStorageAccountName": "[take(tolower(replace(replace(concat(variables('project'), variables('environment'), variables('entropy')), '-', ''), '.','')), 24)]",
    "contentStorageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts/', variables('contentStorageAccountName'))]",
    "contentStorageLocation": "[resourceGroup().location]",
    "imagesContainerName": "images",

    "appName": "[take(tolower(replace(concat(variables('project'), '-', variables('environment')), '.','')), 60)]",
    "appInsightsName": "[tolower(concat(variables('appName')))]",

    "keyVaultName": "[take(toLower(replace(concat(variables('project'), '-', variables('environment')), '.','')), 24)]",

    "sqlServerAdminUsername": "sswadmin",
    "sqlServerAdminPassword": "[concat('!#', guid('sqlAdminPassword', variables('random')))]",
    "sqlServerName": "[concat(variables('project'), '-', variables('environment'))]",
    "sqlDatabaseName": "[concat(variables('project'), '-', variables('environment'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('sqlServerLocation')]",
      "type": "Microsoft.Sql/servers",
      "tags": {
        "project": "[parameters('project')]",
        "environment": "[variables('environment')]",
        "modifiedDate": "[variables('modifiedDate')]",
        "displayName": "SSW.Rewards - SQL Server"
      },
      "name": "[variables('sqlServerName')]",
      "properties": {
        "administratorLogin": "[variables('sqlServerAdminUsername')]",
        "administratorLoginPassword": "[variables('sqlServerAdminPassword')]",
        "version": "12.0"
      },
      "resources": [
        {
          "apiVersion": "2017-10-01-preview",
          "type": "databases",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ],
          "location": "[parameters('sqlServerLocation')]",
          "tags": {
            "project": "[parameters('project')]",
            "environment": "[variables('environment')]",
            "modifiedDate": "[variables('modifiedDate')]",
            "displayName":"SSW.Rewards-db"
          },
          "name": "[variables('sqlDatabaseName')]",
          "properties": {
            "collation": "[parameters('sqlDatabaseCollation')]"
          },
          "sku": {
            "name": "[parameters('sqlDatabaseSkuName')]",
            "tier": "[parameters('sqlDatabaseTier')]"
          }
        },
        {
          "type": "firewallrules",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
          ],
          "location": "[resourceGroup().location]",
          "name": "AllowAllWindowsAzureIps",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('contentStorageAccountName')]",
      "apiVersion": "2018-02-01",
      "location": "[variables('contentStorageLocation')]",
      "tags": {
        "project": "[parameters('project')]",
        "environment": "[variables('environment')]",
        "modifiedDate": "[variables('modifiedDate')]",
        "displayName":"SSW.Rewards-ProfileStorage"
      },
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "resources": [
        {
          "name": "[concat('default/', variables('imagesContainerName'))]",
          "type": "blobServices/containers",
          "apiVersion": "2018-03-01-preview",
          "dependsOn": [
            "[variables('contentStorageAccountName')]"
          ]
        }
      ]
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "Australia East",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]": "Resource",
        "project": "[parameters('project')]",
        "environment": "[variables('environment')]",
        "modifiedDate": "[variables('modifiedDate')]",
        "displayName":"SSW.Rewards-AppInsights"
      },
      "properties": {
        "ApplicationId": "[variables('appName')]",
        "Request_Source": "IbizaWebAppExtensionCreate",
        "Application_Type": "web"
      }
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[variables('appName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('serverFarmLocation')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags": {
        "project": "[parameters('project')]",
        "environment": "[variables('environment')]",
        "modifiedDate": "[variables('modifiedDate')]",
        "displayName": "SSW.Rewards-API"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components/', variables('appInsightsName'))]"
      ],
      "properties": {
        "name": "[variables('appName')]",
        "serverFarmId": "[concat('/subscriptions/', subscription().id,'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
        "hostingEnvironment": "[parameters('hostingEnvironment')]",
        "clientAffinityEnabled": true,
        "tags":{
          "displayName":"SSW.Rewardddsss"
        },
        "siteConfig": {
          "metadata": [
            {
              "name": "CURRENT_STACK",
              "value": "dotnetcore"
            }
          ],
          "alwaysOn": true,
          "use32BitWorkerProcess": true,
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~2"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_Mode",
              "value": "default"
            },
            {
              "name": "DiagnosticServices_EXTENSION_VERSION",
              "value": "enabled"
            },
            {
              "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
              "value": "enabled"
            },
            {
              "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
              "value": "enabled"
            },
            {
              "name": "InstrumentationEngine_EXTENSION_VERSION",
              "value": "enabled"
            },
            {
              "name": "SnapshotDebugger_EXTENSION_VERSION",
              "value": "enabled"
            },
            {
              "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
              "value": "enabled"
            },
            {
              "name": "KeyVaultUrl",
              "value": "[concat('https://', variables('appName'), '.vault.azure.net')]"
            },
            {
              "name": "SecretCacheTimeoutMinutes",
              "value": "[parameters('secretCacheTimeoutMinutes')]"
            },
            {
              "name": "Serilog:Using:0",
              "value": "Serilog.Sinks.Async"
            },
            {
              "name": "Serilog:Using:1",
              "value": "Serilog.Sinks.ApplicationInsights"
            },
            {
              "name": "Serilog:WriteTo:0:Name",
              "value": "Async"
            },
            {
              "name": "Serilog:WriteTo:0:Args:configure:0:Name",
              "value": "ApplicationInsights"
            },
            {
              "name": "Serilog:WriteTo:0:Args:configure:0:Args:restrictedToMinimumLevel",
              "value": "Information"
            },
            {
              "name": "Serilog:WriteTo:0:Args:configure:0:Args:telemetryConverter",
              "value": "Serilog.Sinks.ApplicationInsights.Sinks.ApplicationInsights.TelemetryConverters.TraceTelemetryConverter, Serilog.Sinks.ApplicationInsights"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "name": "[variables('keyVaultName')]",
      "apiVersion": "2016-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "project": "[parameters('project')]",
        "environment": "[variables('environment')]",
        "modifiedDate": "[variables('modifiedDate')]",
        "displayName":"SSW.Rewards-KeyVault"
      },
      "dependsOn": [
      ],
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "networkAcls": {
          "value": {
            "defaultAction": "Allow",
            "bypass": "AzureServices"
          }
        },
        "accessPolicies": [
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "99a78837-69d6-4fe1-8f3b-00ea0d3bb923",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "ba21b0de-b44f-4119-b357-4d3e3e0b07a0",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "24ffe149-ae17-4505-acab-95dd0fd092c2",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "1315b5b8-9f17-4526-bfb2-9f43ab7cdae7",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "04e907fc-f681-48f1-87ab-75e0790b4ce6",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "7ddccbbb-6d7a-491e-992b-436e071f1caf",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "ac2f7c34-b935-48e9-abdc-11e5d4fcb2b0",
            "objectId": "bc9f532b-d5ff-4699-a4f8-11107f5fe6b2",
            "permissions": {
              "keys": [
                "List",
                "Get"
              ],
              "secrets": [
                "List",
                "Get"
              ],
              "certificates": [
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[parameters('servicePrincipleObjectId')]",
            "permissions": {
              "keys": [
                "list",
                "get",
                "create"
              ],
              "secrets": [
                "list",
                "get",
                "set"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('appName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "list",
                "get"
              ],
              "secrets": [
                "list",
                "get"
              ]
            }
          }
        ],
        "enabledForTemplateDeployment": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'ContentStorageConnectionString')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('contentStorageAccountName'), ';AccountKey=', listKeys(variables('contentStorageAccountResourceId'),'2015-05-01-preview').key1)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('contentStorageAccountName'))]"
      ],
      "tags": {
        "displayName":"ContentStorageConnectionString"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'SqlServerAdminUsername')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[variables('sqlServerAdminUsername')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
      ],
      "tags": {
        "displayName":"SqlAdminUsername"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'SqlServerAdminPassword')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[variables('sqlServerAdminPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
      ],
      "tags": {
        "displayName":"SqlAdminPassword"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "name": "[concat(variables('keyVaultName'), '/', 'SqlConnectionString')]",
      "apiVersion": "2015-06-01",
      "properties": {
        "value": "[concat('Server=tcp:', variables('sqlServerName'), '.database.windows.net,1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', variables('sqlServerAdminUsername'), ';Password=', variables('sqlServerAdminPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
      ],
      "tags": {
        "displayName":"SqlConnectionString"
      }
    }
  ],
  "outputs": {
  }
}
